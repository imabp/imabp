{"version":3,"sources":["images/favicon.svg","images/github.svg","LeftDisplay.js","components/AboutME/main.jsx","components/Projects/main.jsx","components/MenuBar/menubar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Avatar","div","className","animate","rotate","alt","src","favicon","Component","UserName","fname","this","props","details","lname","Description","LeftDisplay","useStyles","makeStyles","theme","titlehead","color","background","MainAbout","classes","animateprops","useSpring","opacity","from","h1","classname","style","MainProjects","githublogo","TabPanel","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","Typography","a11yProps","root","flexGrow","width","backgroundColor","ScrollableTabsButtonForce","React","useState","setValue","AppBar","position","Tabs","onChange","event","newValue","variant","scrollButtons","indicatorColor","textColor","aria-label","Tab","label","icon","LeftPanel","display","padding","App","initial","variants","visible","rel","href","Grid","container","spacing","item","xs","sm","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","Container","maxWidth","minWidth","fixed","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,qMCIrCC,E,uKAGE,OACI,kBAAC,IAAOC,IAAR,CAAYC,UAAU,eAAeC,QAAS,CAE1CC,OAAQ,CAAC,GAAI,IAAK,IAAK,IAAK,OAG5B,yBAAKC,IAAI,SAAUC,IAAKC,W,GATnBC,aAefC,E,uKAEE,IAAMC,EAAMC,KAAKC,MAAMC,QAAX,GACNC,EAAMH,KAAKC,MAAMC,QAAX,GACZ,OACG,yBAAKX,UAAU,YACZ,8BAAOQ,EAAP,IAAeI,Q,GANNN,aAWjBO,E,uKAEE,OAAO,yBAAKb,UAAU,QAClB,uBAAGA,UAAU,gBAAgBS,KAAKC,MAAMC,c,GAH1BL,aAsBXQ,E,uKAXZ,OACU,yBAAKd,UAAU,aAEZ,kBAAC,EAAD,CAAQW,QAASF,KAAKC,MAAMC,QAAX,SACjB,kBAAC,EAAD,CAAUA,QAAS,CAAC,GAAKF,KAAKC,MAAMC,QAAX,UAAgC,GAAKF,KAAKC,MAAMC,QAAX,YAC9D,kBAAC,EAAD,CAAaA,QAAQ,wC,GATXL,a,8KCjCpBS,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,UAAU,CACFC,MAAM,MACNC,WAAW,aAMR,SAASC,IACpB,IAAMC,EAAUP,IACVQ,EAAeC,YAAU,CAC3BC,QAAS,EACTC,KAAM,CAAED,QAAS,KAGjB,OACI,6BACA,kBAAC,IAASE,GAAV,CAAaC,UAAWN,EAAQJ,UAAWW,MAAON,GAAlD,6B,qBChBG,SAASO,IACpB,IAAMP,EAAeC,YAAU,CAC3BC,QAAS,EACTC,KAAM,CAAED,QAAS,KAKjB,OACI,kBAAC,IAASE,GAAV,CAAaE,MAAON,GAApB,qBAAoD,yBAAKpB,IAAI,SAASC,IAAK2B,OCAvF,SAASC,EAAStB,GAAQ,IACkBuB,EAAqCvB,EAArCuB,SAAUC,EAA2BxB,EAA3BwB,MAAOC,EAAoBzB,EAApByB,MAAUC,EAD9C,YACwD1B,EADxD,8BAGW,OACE,uCACE2B,KAAK,WACLC,OAAQJ,IAAUC,EAClBI,GAAE,oCAA+BJ,GACjCK,kBAAA,+BAAyCL,IACrCC,GAEHF,IAAUC,GACT,kBAACM,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACC,EAAA,EAAD,KAAaV,KAavD,SAASW,EAAUT,GACe,MAAO,CACLI,GAAG,wBAAD,OAA0BJ,GAC5B,gBAAgB,6BAAhB,OAA8CA,IAInF,IAAMpB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACI4B,KAAM,CACAC,SAAU,EACVC,MAAO,OACPC,gBAAiB,QACjB7B,MAAM,aAK3C,SAAS8B,IACgC,IAAM3B,EAAUP,IADpB,EAE8BmC,IAAMC,SAAS,GAF7C,mBAEWjB,EAFX,KAEkBkB,EAFlB,KAQI,OACU,6BACA,kBAACC,EAAA,EAAD,CAAQrD,UAAWsB,EAAQuB,KAAMS,SAAS,SAASnC,MAAM,WACrD,kBAACoC,EAAA,EAAD,CACArB,MAAOA,EACPsB,SATO,SAACC,EAAOC,GACzBN,EAASM,IASCC,QAAQ,aACRC,cAAc,KACdC,eAAe,UACfC,UAAU,UACVC,aAAW,gCACX5C,MAAM,QACNU,MAAO,CAACT,WAAW,QAASD,MAAM,UAElC,kBAAC6C,EAAA,EAAD,eAAMC,MAAM,WAAYpC,MAAO,CAACV,MAAM,WAAY+C,KAAM,kBAAC,IAAD,OAAuBtB,EAAU,KACzF,kBAACoB,EAAA,EAAD,eAAKC,MAAM,cAAcpC,MAAO,CAACV,MAAM,OAAQ+C,KAAM,kBAAC,IAAD,OAAsBtB,EAAU,KACrF,kBAACoB,EAAA,EAAD,eAAKC,MAAM,QAAQpC,MAAO,CAACV,MAAM,UAAW+C,KAAM,kBAAC,IAAD,OAAwBtB,EAAU,KACpF,kBAACoB,EAAA,EAAD,eAAKC,MAAM,cAAcC,KAAM,kBAAC,IAAD,OAAkBtB,EAAU,KAC3D,kBAACoB,EAAA,EAAD,eAAKC,MAAM,QAAQC,KAAM,kBAAC,IAAD,OAAwBtB,EAAU,KAC3D,kBAACoB,EAAA,EAAD,eAAKC,MAAM,YAAYC,KAAM,kBAAC,IAAD,OAAmBtB,EAAU,KAC1D,kBAACoB,EAAA,EAAD,eAAKC,MAAM,aAAaC,KAAM,kBAAC,IAAD,OAAiBtB,EAAU,OAG7D,kBAACZ,EAAD,CAAUhC,UAAWsB,EAAQuB,KAAQX,MAAOA,EAAOC,MAAO,GACtD,kBAAC,EAAD,CAAOnC,UAAWsB,EAAQuB,QAE9B,kBAACb,EAAD,CAAUE,MAAOA,EAAOC,MAAO,GAC3B,kBAAC,EAAD,OAEJ,kBAACH,EAAD,CAAUE,MAAOA,EAAOC,MAAO,GAA/B,cAGA,kBAACH,EAAD,CAAUE,MAAOA,EAAOC,MAAO,GAA/B,aAGA,kBAACH,EAAD,CAAUE,MAAOA,EAAOC,MAAO,GAA/B,aAGA,kBAACH,EAAD,CAAUE,MAAOA,EAAOC,MAAO,GAA/B,YAGA,kBAACH,EAAD,CAAUE,MAAOA,EAAOC,MAAO,GAA/B,e,YCnG5DpB,EAAUC,aAAW,SAACC,GAAD,MAAU,CACrCkD,UAAU,CACR/C,WAAW,QACXD,MAAM,QACNiD,QAAQ,QACRC,QAAQ,UA4CKC,MAxCf,WACQ,IAcehD,EAAUP,IAC/B,OACE,kBAAC,IAAOhB,IAAR,CACFwE,QAAQ,SACRtE,QAAQ,UACRuE,SAnBuB,CACfC,QAAS,CAAEhD,QAAS,GACpBa,OAAQ,CAAEb,QAAS,KAoBzB,yBAAKzB,UAAU,YACZ,0BAAM0E,IAAI,OAAOC,KAAMtE,MACxB,yBAAKL,UAAWsB,EAAQ6C,WAAW,kBAAC,EAAD,CAAaxD,QApBnC,CACX,UAAY,OACZ,SAAW,MAEX,MAAQ,iCACR,YAAc,qCACd,OAAS,yGACT,OAAS,2BACT,SAAW,oCAab,kBAACiE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAChB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACf,kBAAC,EAAD,OAED,kBAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,QCnChBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAA,EAAD,CAAWC,SAAS,KAAKC,SAAS,KAAKC,OAAK,GAC5C,kBAAC,EAAD,QAIFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f214af6a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.50e88f4b.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.651d3b21.svg\";","import React, {Component} from 'react';\r\nimport favicon from './images/favicon.svg'\r\nimport {motion} from \"framer-motion\"\r\n// Update: Avatar not displayed. \r\nclass Avatar extends Component{\r\n    render(){\r\n        \r\n        return(\r\n            <motion.div className=\"avatar-class\" animate={{\r\n                \r\n                rotate: [50, 270, 270, 120, 360],\r\n               \r\n              }}>\r\n                <img alt=\"Avatar\"  src={favicon}/>\r\n            </motion.div>\r\n        )\r\n    }\r\n}\r\n\r\nclass UserName extends Component{\r\n    render(){\r\n        const fname=this.props.details[\"fn\"];\r\n        const lname=this.props.details[\"ln\"];\r\n        return(\r\n           <div className=\"username\">\r\n              <span>{fname} {lname}</span>\r\n           </div>\r\n        )\r\n    }\r\n}\r\nclass Description extends Component{\r\n    render(){\r\n        return <div className=\"desc\">\r\n            <p className=\"CODEdecorate\">{this.props.details}</p>\r\n        </div>\r\n    }\r\n}\r\nclass LeftDisplay extends Component{\r\n  render()\r\n  {\r\n\r\n   return ( \r\n             <div className=\"LeftPanel\">\r\n             \r\n                <Avatar details={this.props.details['avatar']}/>\r\n                <UserName details={{\"fn\":this.props.details['firstname'],\"ln\":this.props.details['lastname']}} />\r\n                <Description details=\"Computer Science Undergraduate\"/>\r\n              \r\n            </div>\r\n            )\r\n  }\r\n}  \r\nexport default LeftDisplay;","import React from 'react';\r\nimport {useSpring, animated} from 'react-spring'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    titlehead:{\r\n            color:\"red\",\r\n            background:'white',\r\n    },\r\n  }\r\n));\r\n\r\n\r\nexport default function MainAbout(){\r\n    const classes = useStyles();\r\n    const animateprops = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n      })       \r\n\r\n        return(\r\n            <div>\r\n            <animated.h1 classname={classes.titlehead} style={animateprops}>Student and Fast Learner</animated.h1>\r\n            \r\n\r\n            </div>\r\n        );\r\n    }\r\n","import React from 'react';\r\nimport {useSpring, animated} from 'react-spring'\r\nimport githublogo from '../../images/github.svg'\r\n\r\n\r\n\r\nexport default function MainProjects(){\r\n    const animateprops = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n      })\r\n    \r\n    \r\n        \r\n        return(\r\n            <animated.h1 style={animateprops}>Proudly hosted on <img alt=\"Github\" src={githublogo}  /></animated.h1>\r\n           \r\n\r\n\r\n        );\r\n    }\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {AppBar,Tabs,Tab,Typography,Box} from '@material-ui/core/';\r\n\r\n\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasket';\r\nimport ThumbDown from '@material-ui/icons/ThumbDown';\r\nimport ThumbUp from '@material-ui/icons/ThumbUp';\r\n\r\nimport About from '../AboutME/main';\r\nimport Project from '../Projects/main'\r\nfunction TabPanel(props) {\r\n                                    const { children, value, index, ...other } = props;\r\n\r\n                                    return (\r\n                                      <div\r\n                                        role=\"tabpanel\"\r\n                                        hidden={value !== index}\r\n                                        id={`scrollable-force-tabpanel-${index}`}\r\n                                        aria-labelledby={`scrollable-force-tab-${index}`}\r\n                                        {...other}\r\n                                      >\r\n                                        {value === index && (\r\n                                          <Box p={3}>\r\n                                            <Typography>{children}</Typography>\r\n                                          </Box>\r\n                                        )}\r\n                                      </div>\r\n                                    );\r\n                        }\r\n\r\n  TabPanel.propTypes = {\r\n                                    children: PropTypes.node,\r\n                                    index: PropTypes.any.isRequired,\r\n                                    value: PropTypes.any.isRequired,\r\n                        };\r\n\r\n  function a11yProps(index) {\r\n                                    return {\r\n                                      id: `scrollable-force-tab-${index}`,\r\n                                      'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n                                    };\r\n                             }\r\n\r\n const useStyles = makeStyles((theme) => ({\r\n                                              root: {\r\n                                                    flexGrow: 1,\r\n                                                    width: '100%',\r\n                                                    backgroundColor: 'black',\r\n                                                    color:'white'\r\n                                              },\r\n                                            }\r\n                                  ));\r\n\r\nexport default function ScrollableTabsButtonForce() {\r\n                                                        const classes = useStyles();\r\n                                                        const [value, setValue] = React.useState(0);\r\n\r\n                                                        const handleChange = (event, newValue) => {\r\n                                                            setValue(newValue);\r\n                                                        };\r\n                                                      \r\n                                                        return (\r\n                                                                  <div >\r\n                                                                  <AppBar className={classes.root} position=\"static\" color='default'>\r\n                                                                      <Tabs\r\n                                                                      value={value}\r\n                                                                      onChange={handleChange}\r\n                                                                      variant=\"scrollable\"\r\n                                                                      scrollButtons=\"on\"\r\n                                                                      indicatorColor=\"inherit\"\r\n                                                                      textColor=\"inherit\"\r\n                                                                      aria-label=\"scrollable force tabs example\"\r\n                                                                      color=\"white\"\r\n                                                                      style={{background:'black', color:'white'}}\r\n                                                                      >\r\n                                                                      <Tab  label=\"About Me\"  style={{color:'#40E0D0'}} icon={<PersonPinIcon />} {...a11yProps(0)} />\r\n                                                                      <Tab label=\"My Projects\" style={{color:'red'}} icon={<FavoriteIcon />} {...a11yProps(1)} />\r\n                                                                      <Tab label=\"Blogs\" style={{color:'yellow'}} icon={<ShoppingBasket />} {...a11yProps(2)} />\r\n                                                                      <Tab label=\"Communities\" icon={<HelpIcon />} {...a11yProps(3)} />\r\n                                                                      <Tab label=\"Talks\" icon={<ShoppingBasket />} {...a11yProps(4)} />\r\n                                                                      <Tab label=\"MagicZone\" icon={<ThumbDown />} {...a11yProps(5)} />\r\n                                                                      <Tab label=\"Contact Me\" icon={<ThumbUp />} {...a11yProps(6)} />\r\n                                                                      </Tabs>\r\n                                                                  </AppBar>\r\n                                                                  <TabPanel className={classes.root}   value={value} index={0}>\r\n                                                                      <About className={classes.root}/>\r\n                                                                  </TabPanel>\r\n                                                                  <TabPanel value={value} index={1}>\r\n                                                                      <Project/>\r\n                                                                  </TabPanel>\r\n                                                                  <TabPanel value={value} index={2}>\r\n                                                                      Item Three\r\n                                                                  </TabPanel>\r\n                                                                  <TabPanel value={value} index={3}>\r\n                                                                      Item Four\r\n                                                                  </TabPanel>\r\n                                                                  <TabPanel value={value} index={4}>\r\n                                                                      Item Five\r\n                                                                  </TabPanel>\r\n                                                                  <TabPanel value={value} index={5}>\r\n                                                                      Item Six\r\n                                                                  </TabPanel>\r\n                                                                  <TabPanel value={value} index={6}>\r\n                                                                      Item Seven\r\n                                                                  </TabPanel>\r\n                                                                  </div>\r\n                                                        );\r\n                                                      }   ","import React, {Component} from 'react';\nimport LeftDisplay from './LeftDisplay';\nimport Menubar from './components/MenuBar/menubar'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport favicon from './images/favicon.svg';\nimport { motion } from \"framer-motion\"\nconst useStyles=makeStyles((theme)=>({\nLeftPanel:{\n  background:'black',\n  color:'white',\n  display:'block',\n  padding:'1%'\n}\n\n}))\nfunction App() {\n        const variants = {\n          visible: { opacity: 1 },\n          hidden: { opacity: 0 },\n        }\n    const details= {\n        \"firstname\":\"Abir\",\n        \"lastname\":\"Pal\",\n        \n        \"title\":\"Computer Science Undergraduate\",\n        \"description\":\"Works at Integration of ML and Web\",\n        \"avatar\":\"https://avatars3.githubusercontent.com/u/53480076?s=460&u=182022968da3f6f03777d264eef4a999dd689379&v=4\",\n        \"github\":\"https://github.com/imabp\",\n        \"linkedin\":\"https://linkedin.com/in/imabp\"\n                 }\n                 const classes = useStyles();\n  return (\n    <motion.div\n  initial=\"hidden\"\n  animate=\"visible\"\n  variants={variants}\n\n>\n    <div className=\"main-app\">\n       <link rel=\"icon\" href={favicon}/>\n      <div className={classes.LeftPanel}><LeftDisplay details={details}/></div>\n      <Grid container spacing={3}>\n               <Grid item xs={12}>\n               <Menubar/>\n              </Grid>\n              <Grid item xs={6} sm={6}>\n         \n              </Grid>\n      </Grid>\n    </div>\n    </motion.div>\n    );\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Container from '@material-ui/core/Container';\nReactDOM.render(\n  <React.StrictMode>\n    <Container maxWidth=\"lg\" minWidth=\"sm\" fixed>\n    <App />\n    </Container>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}